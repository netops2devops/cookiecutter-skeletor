[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_short_description}}"
authors = ["{{cookiecutter.full_name}} <{{cookiecutter.email}}>"]
license = "{{cookiecutter.license}}"
readme = "README.md"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.8"
logging-json = "*"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
ipython = "^8.8.0"
bandit = "^1.7.4"
toml = "^0.10.2"
pre-commit = "*"
autopep8 = "*"

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
minversion = "7.0"
console_output_style = "progress"
addopts = ["-ra -q", "--cov=.", "--cov-report=term-missing", "--no-cov-on-fail", "--cache-clear"]

[tool.black]
line-length = 88

[tool.isort]
profile = 'black'

[tool.autopep8]
max_line_length = 120
#exclude = " "
max-line-length = 88
ignore = "E501,W6"  # or ["E501", "W6"]
in-place = true
recursive = true
aggressive = 3
